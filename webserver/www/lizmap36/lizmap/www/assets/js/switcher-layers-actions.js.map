{"version":3,"file":"../../lizmap/www/assets/js/switcher-layers-actions.js","mappings":"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","sources":["webpack://assets/./src/legacy/switcher-layers-actions.js"],"sourcesContent":["var lizLayerActionButtons = function() {\n\n    var tooltipControl = null;\n    var tooltipLayers = [];\n    var featureTypes = null;\n    var opacityLayers = {};\n\n    function fillSubDock( html ){\n        $('#sub-dock').html( html );\n\n        // Style opacity button\n        $('#sub-dock a.btn-opacity-layer').each(function(){\n            var v = $(this).text();\n            var op = parseInt(v) / 100 - 0.3;\n            $(this).css('background-color', 'rgba(0,0,0,'+op+')' );\n            $(this).css('background-image', 'none');\n            $(this).css('text-shadow', 'none');\n            if( parseInt(v) > 60 )\n                $(this).css('color', 'lightgrey');\n        });\n\n        // activate link buttons\n        $('div.sub-metadata button.link')\n            .click(function(){\n                var self = $(this);\n                if (self.hasClass('disabled'))\n                    return false;\n                var windowLink = self.val();\n                // Test if the link is internal\n                var mediaRegex = /^(\\/)?media\\//;\n                if(mediaRegex.test(windowLink)){\n                    var mediaLink = OpenLayers.Util.urlAppend(lizUrls.media\n                        ,OpenLayers.Util.getParameterString(lizUrls.params)\n                    )\n                    windowLink = mediaLink+'&path=/'+windowLink;\n                }\n                // Open link in a new window\n                window.open(windowLink);\n            });\n\n        $('#hide-sub-dock').click(function(){\n            var itemName = $(this).val();\n            var itemConfig = lizMap.config.layers[itemName];\n            var itemType = 'baselayer';\n            if('type' in itemConfig)\n                itemType = itemConfig.type;\n\n            lizMap.events.triggerEvent(\"lizmapswitcheritemselected\",\n                { 'name': itemName, 'type': itemType, 'selected': false}\n            );\n\n            $('#switcher tr.selected').removeClass('selected');\n        });\n    }\n\n    function getLayerMetadataHtml( aName ){\n        var html = '';\n        var metadatas = {\n            title: aName,\n            type: 'layer',\n            abstract: null,\n            link: null,\n            styles: null,\n            isBaselayer: false\n        };\n        if( aName in lizMap.config.layers ){\n            var layerConfig = lizMap.config.layers[aName];\n            metadatas.title = layerConfig.title;\n            metadatas.type = layerConfig.type;\n            if( layerConfig.abstract )\n                metadatas.abstract = layerConfig.abstract;\n            if( layerConfig.link  )\n                metadatas.link = layerConfig.link;\n            if( layerConfig.styles && layerConfig.styles.length > 1 )\n                metadatas.styles = layerConfig.styles\n        }\n        if( lizMap.map.baseLayer && lizMap.map.baseLayer.name == aName ){\n            metadatas.type = 'layer';\n            metadatas.isBaselayer = true;\n        }\n\n        if( metadatas ){\n            var layerConfig = lizMap.config.layers[aName];\n\n            // Header\n            html+= '<div class=\"sub-metadata\">';\n            html+= '<h3>';\n            html+='    <span class=\"title\">';\n            html+='        <span class=\"icon\"></span>';\n            html+='        <span class=\"text\">'+lizDict['layer.metadata.title']+'</span>';\n            html+='    </span>';\n            html+='</h3>';\n\n            // Content\n            html+= '<div class=\"menu-content\">';\n\n            // Metadata\n            html+= '    <dl class=\"dl-vertical\" style=\"font-size:0.8em;\">';\n            html+= '        <dt>'+lizDict['layer.metadata.layer.name']+'</dt>';\n            html+= '        <dd>'+metadatas.title+'</dd>';\n            html+= '        <dt>'+lizDict['layer.metadata.layer.type']+'</dt>';\n            html+= '        <dd>'+lizDict['layer.metadata.layer.type.' + metadatas.type]+'</dd>';\n\n            // Zoom\n            html+= '        <dt>'+lizDict['layer.metadata.zoomToExtent.title']+'</dt>';\n            html+= '<dd><button class=\"btn btn-mini layerActionZoom\" title=\"'+lizDict['layer.metadata.zoomToExtent.title']+'\" value=\"'+aName+'\"><i class=\"icon-zoom-in\"></i></button></dd>';\n\n            // Tools\n            if( metadatas.type == 'layer'){\n                var isBaselayer = '';\n                if(metadatas.isBaselayer){\n                    isBaselayer = 'baselayer';\n                }\n\n                // Styles\n                if( metadatas.styles ){\n                    var selectedStyle = '';\n                    var oLayer = lizMap.map.getLayersByName( lizMap.cleanName(aName) )[0];\n                    if( oLayer && 'STYLES' in oLayer.params) {\n                        selectedStyle = oLayer.params['STYLES'];\n                    }\n                    options = '';\n                    for( var st in metadatas.styles ){\n                        st = metadatas.styles[st];\n                        if( st == selectedStyle )\n                            options += '<option value=\"'+st+'\" selected>'+st+'</option>';\n                        else\n                            options += '<option value=\"'+st+'\">'+st+'</option>';\n                    }\n                    if( options != '' ){\n                        html+= '        <dt>'+lizDict['layer.metadata.style.title']+'</dt>';\n                        html+= '<dd>';\n                        html+= '<input type=\"hidden\" class=\"styleLayer '+isBaselayer+'\" value=\"'+aName+'\">';\n                        html+= '<select class=\"styleLayer '+isBaselayer+'\">';\n                        html+= options;\n                        html+= '</select>';\n                        html+= '</dd>';\n                    }\n                }\n\n                // Opacity\n                html+= '        <dt>'+lizDict['layer.metadata.opacity.title']+'</dt>';\n                html+= '<dd>';\n                var currentOpacity = 1;\n                if( aName in opacityLayers ){\n                    currentOpacity = opacityLayers[aName];\n                }\n                html+= '<input type=\"hidden\" class=\"opacityLayer '+isBaselayer+'\" value=\"'+aName+'\">';\n                var opacities = lizMap.config.options.layersOpacities;\n                if(typeof opacities === 'undefined') {\n                    opacities = [0.2, 0.4, 0.6, 0.8, 1];\n                }\n                for ( var i=0, len=opacities.length; i<len; i++ ) {\n                    var oactive = '';\n                    if(currentOpacity == opacities[i])\n                        oactive = 'active';\n                    html+= '<a href=\"#\" class=\"btn btn-mini btn-opacity-layer '+ oactive+' '+ opacities[i]*100+'\">'+opacities[i]*100+'</a>';\n                }\n                html+= '</dd>';\n\n                // Export\n                if ( 'exportLayers' in lizMap.config.options\n                  && lizMap.config.options.exportLayers == 'True'\n                  && featureTypes != null\n                  && featureTypes.length != 0 ) {\n                    var exportFormats = lizMap.getVectorLayerResultFormat();\n                    var options = '';\n                    for ( const format of exportFormats ) {\n                        options += '<option value=\"'+format+'\">'+format+'</option>';\n                    }\n                    // Export layer\n                    // Only if layer is in attribute table\n                    if( options != '' && layerConfig.typename != undefined) {\n                        html+= '        <dt>'+lizDict['layer.metadata.export.title']+'</dt>';\n                        html+= '<dd>';\n                        html+= '<select class=\"exportLayer '+isBaselayer+'\">';\n                        html+= options;\n                        html+= '</select>';\n                        html+= '<button class=\"btn btn-mini exportLayer '+isBaselayer+'\" title=\"'+lizDict['layer.metadata.export.title']+'\" value=\"'+aName+'\"><i class=\"icon-download\"></i></button>';\n                        html+= '</dd>';\n                    }\n                }\n            }\n\n            if( metadatas.abstract ){\n                html+= '        <dt>'+lizDict['layer.metadata.layer.abstract']+'</dt>';\n                html+= '        <dd>'+metadatas.abstract+'</dd>';\n            }\n\n            html+= '    </dl>';\n\n            // Link\n            if( metadatas.link  ){\n                html+= '    <button class=\"btn link layer-info\" name=\"link\" title=\"'+lizDict['layer.metadata.layer.info.see']+'\" value=\"'+metadatas.link+'\">'+lizDict['layer.metadata.layer.info.see']+'</button>';\n            }\n\n            // Style\n            html+= '</div>';\n            html+= '</div>';\n            html+= '<button id=\"hide-sub-dock\" class=\"btn btn-mini pull-right\" name=\"close\" title=\"'+lizDict['generic.btn.close.title']+'\" value=\"'+aName+'\">'+lizDict['generic.btn.close.title']+'</button>';\n        }\n\n        return html;\n    }\n\n    function toggleMetadataSubDock(layerName, selected){\n        if( selected ){\n            var html = getLayerMetadataHtml( layerName );\n            fillSubDock( html );\n        }else{\n            $('#sub-dock').hide().html( '' );\n            return;\n        }\n\n        var subDockVisible = ( $('#sub-dock').css('display') != 'none' );\n        if( !subDockVisible ){\n            $('#sub-dock').show();\n        }\n    }\n\n    lizMap.events.on({\n\n        'uicreated': function(){\n\n            // Display theme switcher if any\n            if ('themes' in lizMap.config){\n                var themes = lizMap.config.themes;\n                var themeSelector = '<div id=\"theme-selector\" class=\"btn-group\" role=\"group\">';\n                themeSelector += '<button class=\"btn btn-mini dropdown-toggle\" data-toggle=\"dropdown\" type=\"button\" title=\"' + lizDict['switcherLayersActions.themeSelector.title'] +'\" href=\"#\"><i class=\"icon-none qgis_sprite mActionShowAllLayers\"></i><span class=\"caret\"></span></button>';\n                themeSelector += '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\" aria-labelledby=\"dropdownMenu\">';\n\n                for (var themeName in themes) {\n                    themeSelector += '<li class=\"theme\"><a href=\"#\">' + themeName + '</a></li>';\n                }\n\n                themeSelector += '</ul>';\n                themeSelector += '</div>';\n\n                $('#switcher-layers-actions').prepend(themeSelector);\n\n                // Handle theme switching\n                $('#theme-selector').on('click', '.theme', function () {\n                // Set theme as selected\n                    $('#theme-selector .theme').removeClass('selected');\n                    $(this).addClass('selected');\n\n                    var themeNameSelected = $(this).text();\n\n                    if (themeNameSelected in lizMap.config.themes){\n                        var themeSelected = lizMap.config.themes[themeNameSelected];\n\n                        // Uncheck every layers then if a layer is present in theme, check it\n                        $('#switcher-layers .liz-layer a.expander ~ button.checked').each(function(){\n                            if ($(this).hasClass('disabled')) {\n                                $(this).removeClass('partial').removeClass('checked');\n                            } else {\n                                $(this).click();\n                            }\n                        });\n\n                        // Handle layers visibility and style states.\n                        if ('layers' in themeSelected){\n                            for (var layerId in themeSelected.layers) {\n\n                                var getLayerConfig = lizMap.getLayerConfigById(layerId);\n                                if (getLayerConfig) {\n                                    var layerName = getLayerConfig[0];\n                                    var featureType = layerName;\n                                    var layerConfig = getLayerConfig[1];\n\n                                    if ('typename' in layerConfig){\n                                        featureType = layerConfig.typename;\n                                    }\n\n                                    // Visibility\n                                    var layerButton = $('#switcher-layers #layer-' + layerConfig.cleanname + ' a.expander ~ button');\n                                    if (layerButton.hasClass('disabled')) {\n                                        layerButton.removeClass('partial').addClass('checked');\n                                    } else {\n                                        layerButton.click();\n                                    }\n\n                                    // Style\n                                    if ('style' in themeSelected.layers[layerId]) {\n                                        var layerStyle = themeSelected.layers[layerId]['style'];\n                                        var layers = lizMap.map.getLayersByName(lizMap.cleanName(layerName));\n                                        if (layers.length == 0) {\n                                            continue;\n                                        }\n                                        var layer = layers[0];\n                                        if (layer && layer.params) {\n                                            layer.params['STYLES'] = layerStyle;\n                                            layer.redraw(true);\n\n                                            lizMap.events.triggerEvent(\"layerstylechanged\",\n                                                { 'featureType': featureType }\n                                            );\n                                        }\n                                    }\n                                }\n                            }\n                        }\n\n                        // Trigger map theme event\n                        lizMap.events.triggerEvent(\"mapthemechanged\",\n                            {\n                                'name': themeNameSelected,\n                                'config': themeSelected\n                            }\n                        );\n                    }\n                });\n\n                // Trigger event with the list of mapThemes\n                lizMap.events.triggerEvent(\"mapthemesadded\",\n                    {\n                        'themes': themes\n                    }\n                );\n\n                // Activate first map them on load\n                if ('activateFirstMapTheme' in lizMap.config.options && lizMap.config.options.activateFirstMapTheme == 'True') {\n                    $('#theme-selector li.theme:nth-child(1)').click();\n                }\n            }\n\n            featureTypes = lizMap.getVectorLayerFeatureTypes();\n\n            // title tooltip\n            $('#switcher-layers-actions .btn, #get-baselayer-metadata').tooltip({\n                placement: 'bottom'\n            });\n\n            // Expand all of unfold all\n            $('#layers-unfold-all').click(function(){\n                $('#switcher table.tree tr.collapsed:not(.liz-layer.disabled) a.expander').click();\n                return false;\n            });\n            $('#layers-fold-all').click(function(){\n                $('#switcher table.tree').collapseAll();\n                return false;\n            });\n\n            // Activate get-baselayer-metadata button\n            $('#get-baselayer-metadata').click(function(){\n\n                $('#hide-sub-dock').click();\n\n                if( !lizMap.map.baseLayer)\n                    return false;\n                var layerName = lizMap.map.baseLayer.name;\n                if( !layerName )\n                    return false;\n                lizMap.events.triggerEvent(\"lizmapswitcheritemselected\",\n                    { 'name': layerName, 'type': 'baselayer', 'selected': true}\n                );\n                return false;\n            });\n\n\n            // Zoom\n            $('#content').on('click', 'button.layerActionZoom', function(){\n                var layerName = $(this).val();\n                if( !layerName ){\n                    return false;\n                }\n\n                var itemConfig = lizMap.config.layers[layerName];\n                if( itemConfig.type == 'baselayer' )\n                    lizMap.map.zoomToMaxExtent();\n\n                var mapProjection = lizMap.map.getProjection();\n                if(mapProjection == 'EPSG:900913')\n                    mapProjection = 'EPSG:3857';\n\n                if( !( 'bbox' in itemConfig ) || !( mapProjection in itemConfig['bbox'] ) ){\n                    console.log('The layer bbox information has not been found in config');\n                    console.log(itemConfig);\n                    return false;\n                }\n\n                var lex = itemConfig['bbox'][mapProjection]['bbox'];\n                var lBounds = new OpenLayers.Bounds(\n                    lex[0],\n                    lex[1],\n                    lex[2],\n                    lex[3]\n                );\n                // Reverse axis\n                if (OpenLayers.Projection.defaults[mapProjection] &&\n                    OpenLayers.Projection.defaults[mapProjection].yx) {\n                    lBounds = new OpenLayers.Bounds(\n                        lex[1],\n                        lex[0],\n                        lex[3],\n                        lex[2]\n                    );\n                }\n                lizMap.map.zoomToExtent( lBounds );\n\n                return false;\n            });\n\n\n            // Opacity\n            $('#content').on('change', 'select.styleLayer', function(){\n\n                // Get chosen style\n                var eStyle = $(this).val();\n\n                // Get layer name and type\n                var h = $(this).parent().find('input.styleLayer');\n                var eName = h.val();\n                var isBaselayer = h.hasClass('baselayer');\n                if( !eName )\n                    return false;\n\n                // Get layer\n                var layer = null;\n                if( isBaselayer){\n                    layer = lizMap.map.baseLayer;\n                }else{\n                    layer = lizMap.map.getLayersByName( lizMap.cleanName(eName) )[0];\n                }\n\n                // Set style\n                if( layer && layer.params) {\n                    layer.params['STYLES'] = eStyle;\n                    layer.redraw( true );\n\n                    lizMap.events.triggerEvent(\"layerstylechanged\",\n                        { 'featureType': eName}\n                    );\n                }\n            });\n\n            // Opacity\n            $('#content').on('click', 'a.btn-opacity-layer', function(){\n\n                // Get chosen opacity\n                var eVal = $(this).text();\n                var opacity = parseInt(eVal) / 100;\n\n                // Get layer name and type\n                var h = $(this).parent().find('input.opacityLayer');\n                var eName = h.val();\n                var isBaselayer = h.hasClass('baselayer');\n                if( !eName ){\n                    return false;\n                }\n\n                // Get layer\n                var layer = null;\n                if( isBaselayer){\n                    layer = lizMap.map.baseLayer;\n                }else{\n                    layer = lizMap.map.getLayersByName( lizMap.cleanName(eName) )[0];\n                }\n\n                // Set opacity\n                if( layer && layer.params) {\n                    layer.setOpacity(opacity);\n                    opacityLayers[eName] = opacity;\n                    $('a.btn-opacity-layer').removeClass('active');\n                    $('a.btn-opacity-layer.' + opacity*100).addClass('active');\n                }\n\n                // Blur dropdown or baselayer button\n                $('#switcher').click();\n\n                return false;\n            });\n\n\n            // Export\n            $('#content').on('click', 'button.exportLayer', function(){\n                var eName = $(this).val();\n                var eFormat = $(this).parent().find('select.exportLayer').val();\n                lizMap.exportVectorLayer( eName, eFormat );\n                return false;\n            });\n\n            // Cancel Lizmap global filter\n            $('#layerActionUnfilter').click(function(){\n                var layerName = lizMap.lizmapLayerFilterActive;\n                if( !layerName )\n                    return false;\n\n                lizMap.events.triggerEvent(\"layerfeatureremovefilter\",\n                    { 'featureType': layerName}\n                );\n                lizMap.lizmapLayerFilterActive = null;\n                $(this).hide();\n\n                return false;\n            });\n\n            lizMap.events.on({\n                dockclosed: function(e) {\n                    if ( e.id == 'switcher' ) {\n                        $('#hide-sub-dock').click();\n                    }\n                },\n                lizmapbaselayerchanged: function(e) {\n                    if ( $('#sub-dock').is(':visible') ) {\n                        var subDockLayer = $('#hide-sub-dock').val();\n                        if ( $('#switcher-baselayer-select').find('option[value=\"'+subDockLayer+'\"]').length != 0 ) {\n                            if ( subDockLayer != $('#switcher-baselayer-select').val() ) {\n                                lizMap.events.triggerEvent(\"lizmapswitcheritemselected\",\n                                    { 'name': e.layer.name, 'type': 'baselayer', 'selected': true}\n                                );\n                            }\n                        }\n                    }\n                }\n            });\n\n        },\n        'lizmapswitcheritemselected': function(evt){\n\n            // Get item properties\n            var itemName = evt.name;\n            var itemType = evt.type;\n            var itemSelected = evt.selected;\n            var itemConfig = {};\n            // Get item Lizmap config\n            if( itemType == 'baselayer'){\n                var layerName = lizMap.getLayerNameByCleanName( lizMap.cleanName(itemName) );\n                if( layerName ){\n                    itemName = layerName;\n                }\n            }else{\n                var layerName = lizMap.getLayerNameByCleanName( lizMap.cleanName(itemName) );\n                if( layerName ){\n                    itemName = layerName;\n                    itemConfig = lizMap.config.layers[layerName];\n                }\n                else{\n                    return false;\n                }\n            }\n\n            // Change action buttons values\n            var btValue = itemName;\n            if( !itemSelected )\n                btValue = '';\n            $('#switcher-layers-actions button').val( btValue );\n\n            // Toggle buttons depending on itemType\n\n            // Zoom to layer\n            var zoomStatus = (!itemSelected || !('bbox' in itemConfig) );\n            $('button.layerActionZoom').attr( 'disable', zoomStatus ).toggleClass( 'disabled', zoomStatus );\n\n            // Refresh sub-dock content\n            toggleMetadataSubDock(itemName, itemSelected);\n        }\n    });\n}();\n"],"names":["featureTypes","opacityLayers","lizMap","events","on","config","themes","themeSelector","themeName","lizDict","$","prepend","removeClass","this","addClass","themeNameSelected","text","themeSelected","each","hasClass","click","layerId","layers","getLayerConfig","getLayerConfigById","layerName","featureType","layerConfig","typename","layerButton","cleanname","layerStyle","map","getLayersByName","cleanName","length","layer","params","redraw","triggerEvent","options","activateFirstMapTheme","getVectorLayerFeatureTypes","tooltip","placement","collapseAll","baseLayer","name","val","itemConfig","type","zoomToMaxExtent","mapProjection","getProjection","console","log","lex","lBounds","OpenLayers","Bounds","Projection","defaults","yx","zoomToExtent","eStyle","h","parent","find","eName","isBaselayer","eVal","opacity","parseInt","setOpacity","eFormat","exportVectorLayer","lizmapLayerFilterActive","hide","dockclosed","e","id","lizmapbaselayerchanged","is","subDockLayer","evt","itemName","itemType","itemSelected","selected","getLayerNameByCleanName","btValue","zoomStatus","attr","toggleClass","html","aName","metadatas","title","abstract","link","styles","selectedStyle","oLayer","st","currentOpacity","opacities","layersOpacities","i","len","oactive","exportLayers","exportFormats","getVectorLayerResultFormat","format","undefined","getLayerMetadataHtml","v","op","css","self","windowLink","test","Util","urlAppend","lizUrls","media","getParameterString","window","open","show","toggleMetadataSubDock"],"sourceRoot":""}