{"version":3,"file":"../../lizmap/www/assets/js/search.js","mappings":"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","sources":["webpack://assets/./src/legacy/search.js"],"sourcesContent":["var lizSearch = function() {\n\n    // Attributes\n    var config = null;\n    var map = null;\n\n    function startExternalSearch() {\n        if($('#search-query').val().length != 0){\n            $('#lizmap-search .items li > a').unbind('click');\n            $('#lizmap-search .items').html( '<li class=\"start\"><ul><li>'+lizDict['externalsearch.search']+'</li></ul></li>' );\n            $('#lizmap-search, #lizmap-search-close').addClass('open');\n        }else{\n            lizMap.addMessage(lizDict['externalsearch.noquery'], 'info', true).attr('id','lizmap-search-message');\n        }\n    }\n\n    function updateExternalSearch( aHTML ) {\n        if($('#search-query').val().length != 0){\n            var wgs84 = new OpenLayers.Projection('EPSG:4326');\n\n            $('#lizmap-search .items li > a').unbind('click');\n            if ( $('#lizmap-search .items li.start').length != 0 ){\n                $('#lizmap-search .items').html( aHTML );\n            }\n            else{\n                $('#lizmap-search .items').append( aHTML );\n            }\n            $('#lizmap-search, #lizmap-search-close').addClass('open');\n            $('#lizmap-search .items li > a').click(function() {\n                var bbox = $(this).attr('href').replace('#','');\n                var bbox = OpenLayers.Bounds.fromString(bbox);\n                bbox.transform(wgs84, map.getProjectionObject());\n                map.zoomToExtent(bbox);\n\n                var feat = new OpenLayers.Feature.Vector(bbox.toGeometry().getCentroid());\n                var data = $(this).attr('data');\n                if ( data ) {\n                    var geom = OpenLayers.Geometry.fromWKT(data);\n                    geom.transform(wgs84, map.getProjectionObject());\n                    feat = new OpenLayers.Feature.Vector(geom);\n                }\n\n                var locateLayer = map.getLayersByName('locatelayer');\n                if (locateLayer.length != 0) {\n                    locateLayer = locateLayer[0];\n                    locateLayer.destroyFeatures();\n                    locateLayer.setVisibility(true);\n                    locateLayer.addFeatures([feat]);\n                }\n\n                $('#lizmap-search, #lizmap-search-close').removeClass('open');\n                // trigger event containing selected feature\n                lizMap.events.triggerEvent('lizmapexternalsearchitemselected',\n                    {\n                        'feature': feat\n                    }\n                );\n                return false;\n            });\n            $('#lizmap-search-close button').click(function() {\n                $('#lizmap-search, #lizmap-search-close').removeClass('open');\n                return false;\n            });\n        }\n    }\n\n    function getHighlightRegEx() {\n        // Format answers to highlight searched keywords\n        var sqval = $('#search-query').val();\n        var sqvals = sqval.split(' ');\n        var sqvalsn = [];\n        var sqrex = '(';\n        for(var i in sqvals){\n            var sqi = sqvals[i].trim();\n            if( sqi == '' ){\n                continue;\n            }\n            sqvalsn.push(sqi);\n            if(sqi != lizMap.cleanName(sqi)){\n                sqvalsn.push(lizMap.cleanName(sqi));\n            }\n        }\n        sqrex+= sqvalsn.join('|');\n        sqrex+= ')';\n        return new RegExp(sqrex, \"ig\");\n    }\n\n    /**\n     * PRIVATE function: addExternalSearch\n     * add external search capability\n     *\n     * Returns:\n     * {Boolean} external search is in the user interface\n     */\n    function addSearch( searchConfig ) {\n        if ( searchConfig.type == 'externalSearch' ){\n            return false;\n        }\n        if ( !'url' in searchConfig ){\n            return false;\n        }\n\n        // define max extent for searches\n        var wgs84 = new OpenLayers.Projection('EPSG:4326');\n        var extent = new OpenLayers.Bounds( map.maxExtent.toArray() );\n        extent.transform(map.getProjection(), wgs84);\n\n        $('#nominatim-search').submit(function(){\n            startExternalSearch();\n\n            // Format answers to highlight searched keywords\n            var labrex = getHighlightRegEx();\n            $.get(searchConfig.url\n                ,{\n                  \"repository\": lizUrls.params.repository,\n                  \"project\": lizUrls.params.project,\n                  \"query\":$('#search-query').val(),\n                  \"bbox\":extent.toBBOX()\n                 }\n                ,function(results) {\n                    var text = '';\n                    var count = 0;\n\n                    // Loop through results\n                    for ( var ftsId in results ) {\n                        var ftsLayerResult = results[ftsId];\n                        text += '<li><b>'+ftsLayerResult.search_name+'</b>';\n                        text += '<ul>';\n                        for ( var i=0, len=ftsLayerResult.features.length; i<len; i++){\n                            var ftsFeat = ftsLayerResult.features[i];\n                            var ftsGeometry = OpenLayers.Geometry.fromWKT(ftsFeat.geometry);\n                            if ( ftsLayerResult.srid != 'EPSG:4326' ){\n                                ftsGeometry.transform(ftsLayerResult.srid, 'EPSG:4326');\n                            }\n                            var bbox = ftsGeometry.getBounds();\n                            if ( extent.intersectsBounds(bbox) ) {\n                              var lab = ftsFeat.label.replace(labrex,'<b style=\"color:#0094D6;\">$1</b>');\n                              text += '<li><a href=\"#'+bbox.toBBOX()+'\" data=\"'+ftsGeometry.toString()+'\">'+lab+'</a></li>';\n                              count++;\n                            }\n                        }\n                        text += '</ul></li>';\n                    }\n\n                    if (count != 0 && text != ''){\n                        updateExternalSearch( text );\n                    }\n                    else{\n                        updateExternalSearch( '<li><b>'+lizDict['externalsearch.mapdata']+'</b><ul><li>'+lizDict['externalsearch.notfound']+'</li></ul></li>' );\n                    }\n                }, 'json');\n            return false;\n        });\n\n        return true;\n    }\n\n    /**\n     * PRIVATE function: addExternalSearch\n     * add external search capability\n     *\n     * Returns:\n     * {Boolean} external search is in the user interface\n     */\n    function addExternalSearch( searchConfig ) {\n        if ( searchConfig.type != 'externalSearch' ){\n            return false;\n        }\n\n        // define max extent for searches\n        var wgs84 = new OpenLayers.Projection('EPSG:4326');\n        var extent = new OpenLayers.Bounds( map.maxExtent.toArray() );\n        extent.transform(map.getProjection(), wgs84);\n\n        // define external search service\n        var service = null;\n        switch (searchConfig.service) {\n            case 'nominatim':\n                if ( 'url' in searchConfig ){\n                    service = OpenLayers.Util.urlAppend(searchConfig.url\n                                ,OpenLayers.Util.getParameterString(lizUrls.params)\n                              );\n                }\n                break;\n            case 'ign':\n                service = 'https://wxs.ign.fr/essentiels/geoportail/ols?';\n            break;\n            case 'google':\n                if ( google && 'maps' in google && 'Geocoder' in google.maps ){\n                    service = new google.maps.Geocoder();\n                }\n                break;\n        }\n\n        if ( service == null ){\n            return false;\n        }\n\n        $('#nominatim-search').submit(function(){\n            startExternalSearch();\n\n            // Format answers to highlight searched keywords\n            var labrex = getHighlightRegEx();\n            switch (searchConfig.service) {\n                case 'nominatim':\n                    $.get(service\n                        ,{\"query\":$('#search-query').val(),\"bbox\":extent.toBBOX()}\n                        ,function(data) {\n                            var text = '';\n                            var count = 0;\n                            $.each(data, function(i, e){\n                                if (count > 9){\n                                    return false;\n                                }\n                                if ( !e.boundingbox ){\n                                    return true;\n                                }\n\n                                var bbox = [\n                                    e.boundingbox[2],\n                                    e.boundingbox[0],\n                                    e.boundingbox[3],\n                                    e.boundingbox[1]\n                                ];\n                                bbox = new OpenLayers.Bounds(bbox);\n                                if ( extent.intersectsBounds(bbox) ) {\n                                    var lab = e.display_name.replace(labrex,'<b style=\"color:#0094D6;\">$1</b>');\n                                    text += '<li><a href=\"#'+bbox.toBBOX()+'\">'+lab+'</a></li>';\n                                    count++;\n                                }\n                            });\n                            if (count == 0 || text == ''){\n                                text = '<li>'+lizDict['externalsearch.notfound']+'</li>';\n                            }\n                            updateExternalSearch( '<li><b>OpenStreetMap</b><ul>'+text+'</ul></li>' );\n                        }, 'json');\n                    break;\n                case 'ign':\n                    var xmlIGN = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n                        xmlIGN +=   '<XLS ';\n                        xmlIGN +=       'xmlns:gml=\"http://www.opengis.net/gml\" ';\n                        xmlIGN +=       'xmlns=\"http://www.opengis.net/xls\" ';\n                        xmlIGN +=       'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.2\" ';\n                        xmlIGN +=        'xsi:schemaLocation=\"http://www.opengis.net/xls http://schemas.opengis.net/ols/1.2/olsAll.xsd\">';\n                        xmlIGN +=           '<RequestHeader srsName=\"epsg:4326\"/>';\n                        xmlIGN +=           '<Request maximumResponses=\"10\" methodName=\"GeocodeRequest\" requestID=\"uid42\" version=\"1.2\">';\n                        xmlIGN +=               '<GeocodeRequest returnFreeForm=\"false\">';\n                        xmlIGN +=                   '<Address countryCode=\"StreetAddress\">';\n                        xmlIGN +=                      '<freeFormAddress>'+$('#search-query').val()+'</freeFormAddress>';\n                        xmlIGN +=                   '</Address>';\n                        xmlIGN +=                '</GeocodeRequest>';\n                        xmlIGN +=           '</Request>';\n                        xmlIGN +=    '</XLS>';\n\n                    $.get(\n                        encodeURI(service+'xls='+xmlIGN)\n                        ,function(xml) {\n                            var text = '';\n                            var count = 0;\n\n                            $(xml).find(\"GeocodedAddress\").each(function () {\n                                if (count > 9){\n                                    return false;\n                                }\n                                var bbox = $(this).find(\"Place[type=Bbox]\").text().split(';');\n\n                                var number = $(this).find(\"Building\").attr('number');\n                                var street = $(this).find(\"Street\").text();\n                                var municipality = $(this).find(\"Place[type=Municipality]\").text();\n                                var departement = $(this).find(\"Place[type=Departement]\").text();\n\n                                var formatted_address = '';\n\n                                if(number && number !== ''){\n                                    formatted_address += number + ' ';\n                                }\n                                if(street !== ''){\n                                    formatted_address += street + ', ';\n                                }\n                                if(municipality !== ''){\n                                    formatted_address += municipality + ', ';\n                                }\n                                if(departement !== ''){\n                                    formatted_address += departement;\n                                }\n\n                                bbox = new OpenLayers.Bounds(bbox);\n                                if ( extent.intersectsBounds(bbox) ) {\n                                    var lab = formatted_address.replace(labrex,'<b style=\"color:#0094D6;\">$1</b>');\n                                    text += '<li><a href=\"#'+bbox.toBBOX()+'\">'+lab+'</a></li>';\n                                    count++;\n                                }\n\n                             });\n                            if (count == 0 || text == ''){\n                                text = '<li>'+lizDict['externalsearch.notfound']+'</li>';\n                            }\n                            updateExternalSearch( '<li><b>IGN</b><ul>'+text+'</ul></li>' );\n                    });\n                    break;\n                case 'google':\n                    service.geocode( {\n                        'address': $('#search-query').val(),\n                        'bounds': new google.maps.LatLngBounds(\n                          new google.maps.LatLng(extent.top,extent.left),\n                          new google.maps.LatLng(extent.bottom,extent.right)\n                          )\n                    }, function(results, status) {\n                        if (status == google.maps.GeocoderStatus.OK) {\n                            var text = '';\n                            var count = 0;\n                            $.each(results, function(i, e){\n                                if (count > 9){\n                                    return false;\n                                }\n                                var bbox = [];\n                                if (e.geometry.viewport) {\n                                    bbox = [\n                                        e.geometry.viewport.getSouthWest().lng(),\n                                        e.geometry.viewport.getSouthWest().lat(),\n                                        e.geometry.viewport.getNorthEast().lng(),\n                                        e.geometry.viewport.getNorthEast().lat()\n                                    ];\n                                } else if (e.geometry.bounds) {\n                                    bbox = [\n                                        e.geometry.bounds.getSouthWest().lng(),\n                                        e.geometry.bounds.getSouthWest().lat(),\n                                        e.geometry.bounds.getNorthEast().lng(),\n                                        e.geometry.bounds.getNorthEast().lat()\n                                    ];\n                                }\n                                if ( bbox.length != 4 ){\n                                    return false;\n                                }\n                                bbox = new OpenLayers.Bounds(bbox);\n                                if ( extent.intersectsBounds(bbox) ) {\n                                    var lab = e.formatted_address.replace(labrex,'<b style=\"color:#0094D6;\">$1</b>');\n                                    text += '<li><a href=\"#'+bbox.toBBOX()+'\">'+lab+'</a></li>';\n                                    count++;\n                                }\n                            });\n                            if (count == 0 || text == ''){\n                                text = '<li>'+lizDict['externalsearch.notfound']+'</li>';\n                            }\n                            updateExternalSearch( '<li><b>Google</b><ul>'+text+'</ul></li>' );\n                        } else\n                            updateExternalSearch( '<li><b>Google</b><ul><li>'+lizDict['externalsearch.notfound']+'</li></ul></li>' );\n                    });\n                break;\n            }\n            return false;\n        });\n\n        return true;\n    }\n\n    /**\n     * PRIVATE function: addSearches\n     * add searches capability\n     *\n     * Returns:\n     * {Boolean} searches added to the user interface\n     */\n    function addSearches() {\n        var configOptions = config.options;\n        if ( !( 'searches' in configOptions ) || ( configOptions.searches.length == 0 ) ){\n            return;\n        }\n\n        var searchOptions = config.options.searches;\n        var searchAdded = false;\n        for( var i=0, len=searchOptions.length; i<len; i++ ){\n            var searchOption = searchOptions[i];\n            var searchAddedResult = false;\n            if ( searchOption.type == 'externalSearch' ){\n                searchAddedResult = addExternalSearch( searchOption );\n            }\n            else{\n                searchAddedResult = addSearch( searchOption );\n            }\n            searchAdded = searchAdded || searchAddedResult;\n        }\n        if ( !searchAdded ){\n            $('#nominatim-search').remove();\n            $('#lizmap-search, #lizmap-search-close').remove();\n        }\n        return searchAdded;\n    }\n\n    lizMap.events.on({\n        'toolbarcreated':function(evt){\n            // Attributes\n            config = lizMap.config;\n            map = lizMap.map;\n\n            // Add or remove searches!\n            var configOptions = config.options;\n            if ( ( 'searches' in configOptions ) && ( configOptions.searches.length > 0 ) ){\n                addSearches();\n            }\n            else {\n                $('#nominatim-search').remove();\n                $('#lizmap-search, #lizmap-search-close').remove();\n            }\n        }\n    });\n}();\n"],"names":["config","map","startExternalSearch","$","val","length","unbind","html","lizDict","addClass","lizMap","addMessage","attr","updateExternalSearch","aHTML","wgs84","OpenLayers","Projection","append","click","bbox","this","replace","Bounds","fromString","transform","getProjectionObject","zoomToExtent","feat","Feature","Vector","toGeometry","getCentroid","data","geom","Geometry","fromWKT","locateLayer","getLayersByName","destroyFeatures","setVisibility","addFeatures","removeClass","events","triggerEvent","getHighlightRegEx","sqvals","split","sqvalsn","sqrex","i","sqi","trim","push","cleanName","join","RegExp","addSearch","searchConfig","type","extent","maxExtent","toArray","getProjection","submit","labrex","get","url","lizUrls","params","repository","project","toBBOX","results","text","count","ftsId","ftsLayerResult","search_name","len","features","ftsFeat","ftsGeometry","geometry","srid","getBounds","intersectsBounds","lab","label","toString","addExternalSearch","service","Util","urlAppend","getParameterString","google","maps","Geocoder","each","e","boundingbox","display_name","xmlIGN","encodeURI","xml","find","number","street","municipality","departement","formatted_address","geocode","LatLngBounds","LatLng","top","left","bottom","right","status","GeocoderStatus","OK","viewport","getSouthWest","lng","lat","getNorthEast","bounds","on","evt","configOptions","options","searches","searchOptions","searchAdded","searchAddedResult","searchOption","remove","addSearches"],"sourceRoot":""}