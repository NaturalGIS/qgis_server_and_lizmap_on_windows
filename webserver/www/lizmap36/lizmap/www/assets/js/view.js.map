{"version":3,"file":"../../lizmap/www/assets/js/view.js","mappings":"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","sources":["webpack://assets/./src/legacy/view.js"],"sourcesContent":["var addDescriptionSlider = function(){\n    $('.liz-project-img').parent().mouseenter(function(){\n      var self = $(this);\n      self.find('.liz-project-desc').slideDown();\n    }).mouseleave(function(){\n      var self = $(this);\n      self.find('.liz-project-desc').hide();\n    }).click(function(){\n      var self = $(this);\n      window.location = self.parent().find('a.liz-project-view').attr('href');\n      return false;\n    });\n}\n\nvar searchProjects = function(){\n    // Hide search if there are no projects\n    if ($(\"#content.container li .liz-project-title\").length === 0) {\n        $(\"#search\").hide();\n        return;\n    }\n\n    // Activate tooltips\n    $('#toggle-search, #search-project').tooltip();\n\n    // Handle keywords/title toggle\n    $('#toggle-search').click(function(){\n        if ($(this).text() === '#'){\n            $(this).text('T');\n\n            $('.project-keyword').addClass('hide');\n            $('#search-project-keywords-selected').text('');\n        }else{\n            $(this).text('#');\n\n            $('.project-keyword').removeClass('hide');\n        }\n\n        // Relaunch search\n        $(\"#content.container .liz-repository-project-item\").show();\n        $(\"#content.container .liz-repository-title\").show();\n        $(\"#search-project\").keyup();\n    });\n\n    var onlyUnique = function (value, index, self) {\n        return self.indexOf(value) === index;\n    }\n\n    // Get unique keywords for visible projects\n    var getVisibleProjectsKeywords = function() {\n        var keywordList = [];\n        var selector = '.liz-repository-project-item :visible .keywordList';\n\n        $(selector).each(function () {\n            if ($(this).text() !== '') {\n                var keywordsSplitByComma = $(this).text().toUpperCase().split(', ');\n                if (isGraph) {\n                    for (var index = 0; index < keywordsSplitByComma.length; index++) {\n                        keywordList = keywordList.concat(keywordsSplitByComma[index].split('/'));\n                    }\n                }else{\n                    keywordList = keywordList.concat(keywordsSplitByComma);\n                }\n            }\n        });\n\n        return keywordList.filter(onlyUnique);\n    }\n\n    // For graph\n    var getEdges = function () {\n        var edgeList = [];\n\n        $('.liz-repository-project-item :visible .keywordList').each(function () {\n            if ($(this).text() !== '') {\n                var keywordsSplitByComma = $(this).text().toUpperCase().split(', ');\n                for (var index = 0; index < keywordsSplitByComma.length; index++) {\n                    var keywordsInGraph = keywordsSplitByComma[index].split('/');\n\n                    // Get edges\n                    for (var i = 0; i < keywordsInGraph.length - 1; i++) {\n                        edgeList.push([keywordsInGraph[i], keywordsInGraph[i + 1]]);\n                    }\n                }\n            }\n        });\n        return edgeList;\n    }\n\n    // Function to show only projects with selected keywords\n    var filterProjectsBySelectedKeywords = function () {\n        var selectedKeywords = getSelectedKeywords();\n\n        if (selectedKeywords.length === 0) {\n            $(\"#content.container .liz-repository-project-item\").show();\n            $(\"#content.container .liz-repository-title\").show();\n        } else {\n            // Hide everything then show projects and titles corresponding to the selected keywords\n            $(\"#content.container .liz-repository-project-item\").hide();\n            $(\"#content.container .liz-repository-title\").hide();\n\n            // Show project when its keywords match all keywords in selectedKeywords\n            $('.keywordList').each(function () {\n                var showProject = false;\n                var keywordListSplitByComma = $(this).text().toUpperCase().split(', ');\n\n                // Graph\n                if (isGraph) {\n                    var path = selectedKeywords.join('/');\n                    for (var index = 0; index < keywordListSplitByComma.length; index++) {\n                        if (keywordListSplitByComma[index].indexOf(path) !== -1) {\n                            showProject = true;\n                            break;\n                        }\n                    }\n                } else {\n                    showProject = selectedKeywords.every(function (currentValue) {\n                        return (keywordListSplitByComma.indexOf(currentValue) !== -1);\n                    });\n                }\n\n                if (showProject) {\n                    $(this).closest('.liz-repository-project-item').show();\n                    $(this).closest('.liz-repository-project-list').prev('.liz-repository-title').show();\n                }\n            });\n        }\n    }\n\n    // Returns array of selected keywords\n    var getSelectedKeywords = function () {\n        var selectedKeywords = [];\n        $('#search-project-keywords-selected .keyword-label').each(function () {\n            selectedKeywords.push($(this).text().toUpperCase());\n        });\n\n        return selectedKeywords;\n    }\n\n    var unHighlightkeywords = function (){\n        $('#search-project-result .project-keyword').each(function () {\n            $(this).text($(this).text());\n        });\n    }\n\n    // Display possible keywords to choose based on displayed projects and previous keywords selection\n    var displayKeywordChoices = function () {\n        var selectedKeywords = getSelectedKeywords();\n\n        if (selectedKeywords.length === 0) {\n            // Display all keywords\n            $('#search-project-result .project-keyword').removeClass('hide');\n        } else {\n            // Hide all keywords\n            $('#search-project-result .project-keyword').addClass('hide');\n\n            var visibleProjectKeywords = getVisibleProjectsKeywords();\n\n            for (var index = 0; index < visibleProjectKeywords.length; index++) {\n                if (selectedKeywords.indexOf(visibleProjectKeywords[index]) === -1) {\n                    $('#search-project-result .project-keyword.hide').filter(function () {\n                        return ($(this).text().toUpperCase() === visibleProjectKeywords[index]);\n                    }).removeClass('hide');\n                }\n            }\n\n            if (isGraph) {\n                // Hide all keywords\n                $('#search-project-result .project-keyword').addClass('hide');\n                var visibleProjectEdges = getEdges();\n                var selectedKeywords = getSelectedKeywords();\n                var lastSelectedKeyword = selectedKeywords[selectedKeywords.length - 1];\n\n                var hiddenKeywords = $('#search-project-result .project-keyword.hide');\n\n                for (var index = 0; index < hiddenKeywords.length; index++) {\n                    var hiddenKeyword = hiddenKeywords.eq(index);\n\n                    for (var i = 0; i < visibleProjectEdges.length; i++) {\n                        if (visibleProjectEdges[i][0] === lastSelectedKeyword\n                            && visibleProjectEdges[i][1] === hiddenKeyword.text().toUpperCase()) {\n                            hiddenKeyword.removeClass('hide');\n                        }\n                    }\n                }\n            }\n        }\n        unHighlightkeywords();\n    }\n\n    // Search when user type in\n    $(\"#search-project\").keyup(function () {\n        // Scroll to projects\n        $('html').animate({\n            scrollTop: $(\"#anchor-top-projects\").offset().top - $('#header').height()\n        }, 500);\n\n        var searchedTerm = this.value.trim().toUpperCase();\n\n        // Search by keywords\n        if ($('#toggle-search').text() === '#') {\n            displayKeywordChoices();\n            if (searchedTerm === '' && getSelectedKeywords().length === 0) {\n                $('#search-project-result .project-keyword').addClass('hide');\n            } else {\n                $('#search-project-result .project-keyword:visible').each(function () {\n                    var keyword = $(this).text().toUpperCase();\n                    // Set keyword visibility and bold on string part found\n                    if (keyword.indexOf(searchedTerm) !== -1) {\n                        var re = new RegExp(searchedTerm, \"g\");\n                        var keywordHighlighted = keyword.replace(re, '<span class=\"highlight\">' + searchedTerm + '</span>');\n                        $(this).html(keywordHighlighted.toLowerCase());\n                    } else {\n                        $(this).addClass('hide');\n                    }\n                });\n            }\n        } else { // Search by title\n            // If the search bar is empty, show everything\n            if (searchedTerm === \"\") {\n                $(\"#content.container .liz-repository-project-item\").show();\n                $(\"#content.container .liz-repository-title\").show();\n            }\n            // Hide everything then show projects and titles corresponding to the search bar\n            else {\n                $(\"#content.container .liz-repository-project-item\").hide();\n                $(\"#content.container .liz-repository-title\").hide();\n\n                $(\"#content.container li .liz-project-title\").filter(function () {\n                    return -1 != $(this).text().toUpperCase().indexOf(searchedTerm);\n                }).closest('.liz-repository-project-item').show();\n\n                $(\"#content.container li .liz-project-title\").filter(function () {\n                    return -1 != $(this).text().toUpperCase().indexOf(searchedTerm);\n                }).closest('.liz-repository-project-list').prev('.liz-repository-title').show();\n\n            }\n        }\n    });\n\n    // Init\n    var isGraph = false;\n    var uniqueKeywordList = getVisibleProjectsKeywords();\n\n    // Activate keywords search if any\n    if (uniqueKeywordList.length > 0){\n        // If at least one keyword contains a slash, we toggle to graph search mode\n        for (var index = 0; index < uniqueKeywordList.length; index++) {\n            var keyword = uniqueKeywordList[index];\n            if (keyword.indexOf('/') !== -1) {\n                isGraph = true;\n                // Get unique keywords in graph mode\n                uniqueKeywordList = getVisibleProjectsKeywords();\n                break;\n            }\n        }\n\n        var keywordsHTML = '';\n        for (var index = 0; index < uniqueKeywordList.length; index++) {\n            keywordsHTML += '<span class=\"project-keyword hide\">' + uniqueKeywordList[index].toLowerCase() + '</span>';\n        }\n        $('#search-project-result').html(keywordsHTML);\n\n        // Add click handler on project keywords\n        $('.project-keyword').click(function () {\n            // Move keyword in #search-project-keywords-selected\n            $('#search-project-keywords-selected').append('<span class=\"project-keyword\"><span class=\"keyword-label\">' + $(this).text() + '</span><span class=\"remove-keyword\">x</span></span>');\n            // Add close event\n            $('#search-project-keywords-selected .remove-keyword').click(function () {\n                $(this).parent().remove();\n                filterProjectsBySelectedKeywords();\n                if ($('#search-project-keywords-selected .remove-keyword').length === 0) {\n                    $('#search-project-result .project-keyword').addClass('hide');\n                } else {\n                    displayKeywordChoices();\n                }\n            });\n            // Hide projects then display projects with selected keyword\n            filterProjectsBySelectedKeywords();\n            // Empty search input\n            $('#search-project').val('')\n            // Display remaining keywords for visible projects not yet selected\n            displayKeywordChoices();\n        });\n    }else{\n        $('#toggle-search').hide().parent().removeClass('input-prepend');\n    }\n}\n\nwindow.addEventListener('load', function () {\n    addDescriptionSlider();\n    searchProjects();\n});\n"],"names":["window","addEventListener","$","parent","mouseenter","this","find","slideDown","mouseleave","hide","click","self","location","attr","length","tooltip","text","addClass","removeClass","show","keyup","onlyUnique","value","index","indexOf","getVisibleProjectsKeywords","keywordList","each","keywordsSplitByComma","toUpperCase","split","isGraph","concat","filter","filterProjectsBySelectedKeywords","selectedKeywords","getSelectedKeywords","showProject","keywordListSplitByComma","path","join","every","currentValue","closest","prev","push","displayKeywordChoices","edgeList","visibleProjectKeywords","visibleProjectEdges","keywordsInGraph","i","lastSelectedKeyword","hiddenKeywords","hiddenKeyword","eq","animate","scrollTop","offset","top","height","searchedTerm","trim","keyword","re","RegExp","keywordHighlighted","replace","html","toLowerCase","uniqueKeywordList","keywordsHTML","append","remove","val","searchProjects"],"sourceRoot":""}